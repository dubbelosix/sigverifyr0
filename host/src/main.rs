// These constants represent the RISC-V ELF and the image ID generated by risc0-build.
// The ELF is used for proving and the ID is used for verification.
use methods::{
    ED_VERIFIER_ELF, ED_VERIFIER_ID
};
use risc0_zkvm::{default_prover, ExecutorEnv};
use borsh::{BorshDeserialize};
use std::fs::File;
use std::io::{BufReader, BufRead};
use std::path::Path;

fn main() {
    env_logger::init();

    let path = Path::new("output.txt");
    let file = File::open(&path).unwrap();
    let reader = BufReader::new(file);

    for (c, line) in reader.lines().enumerate() {
        let encoded = line.unwrap();
        let decoded = hex::decode(&encoded).unwrap();
        let input: Vec<(Vec<u8>, Vec<u8>, [u8;32])> = Vec::try_from_slice(&decoded).unwrap();

        let env = ExecutorEnv::builder().write(&input).unwrap().build().unwrap();
        let prover = default_prover();

        let receipt = prover.prove(env, ED_VERIFIER_ELF).unwrap();
        println!("proof line {c}: {:?}", hex::encode(bincode::serialize(&receipt).unwrap()));
        receipt.verify(ED_VERIFIER_ID).expect("Proof verification should succeed");

    }


}
